/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/notificaties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"][];
                        "application/json": components["schemas"]["NotificatieResponse"][];
                        "text/json": components["schemas"]["NotificatieResponse"][];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notificaties/{kvkNummer}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    kvkNummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    kvkNummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notificaties/status/{kvkNummer}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: {
                    statusen?: components["schemas"]["DeliveryStatuses"][];
                };
                header?: never;
                path: {
                    kvkNummer: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/notificaties/{kvkNummer}/{reference}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    kvkNummer: string;
                    reference: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["Notificatie"];
                        "application/json": components["schemas"]["Notificatie"];
                        "text/json": components["schemas"]["Notificatie"];
                    };
                };
            };
        };
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    kvkNummer: string;
                    reference: string;
                };
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["NotificatieCreateRequest"];
                    "text/json": components["schemas"]["NotificatieCreateRequest"];
                    "application/*+json": components["schemas"]["NotificatieCreateRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        delete: {
            parameters: {
                query?: never;
                header?: never;
                path: {
                    kvkNummer: string;
                    reference: string;
                };
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/UpdateNotificatie": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["DeliveryReceipt"];
                    "text/json": components["schemas"]["DeliveryReceipt"];
                    "application/*+json": components["schemas"]["DeliveryReceipt"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["NotificatieResponse"];
                        "application/json": components["schemas"]["NotificatieResponse"];
                        "text/json": components["schemas"]["NotificatieResponse"];
                    };
                };
            };
        };
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        ContactMethode: {
            value?: string;
            /** Format: int32 */
            order?: number;
            attempted?: boolean;
            type?: components["schemas"]["NotificationTypes"];
        };
        ContactMethodeRequest: {
            value?: string;
            type?: components["schemas"]["NotificationTypes"];
        };
        DeliveryReceipt: {
            /** Format: uuid */
            id: string;
            reference: string;
            to: string;
            status: components["schemas"]["DeliveryStatuses"];
            /** Format: date-time */
            created_at: string;
            /** Format: date-time */
            completed_at: string;
            /** Format: date-time */
            sent_at: string;
            notification_type: components["schemas"]["NotificationTypes"];
            /** Format: uuid */
            template_id: string;
            /** Format: int32 */
            template_version: number;
        };
        /** @enum {string} */
        DeliveryStatuses: DeliveryStatuses;
        Notificatie: {
            /** Format: uuid */
            id?: string;
            reference?: string | null;
            recipient?: string;
            status?: components["schemas"]["DeliveryStatuses"];
            type?: components["schemas"]["NotificationTypes"];
            /** Format: date-time */
            createdAt?: string;
            /** Format: date-time */
            completedAt?: string | null;
            /** Format: date-time */
            sentAt?: string | null;
            /** Format: uuid */
            templateId?: string;
            /** Format: int32 */
            templateVersion?: number;
            events?: components["schemas"]["NotificatieEvent"][];
            contactMethodes?: components["schemas"]["ContactMethode"][];
        };
        NotificatieCreateRequest: {
            contact_methode: components["schemas"]["ContactMethodeRequest"][];
        };
        NotificatieEvent: {
            event?: string;
            status?: components["schemas"]["DeliveryStatuses"];
            /** Format: date-time */
            dateCreated?: string;
        };
        NotificatieResponse: {
            KvkNummer: string;
            Notificaties: components["schemas"]["Notificatie"][];
        };
        /** @enum {string} */
        NotificationTypes: NotificationTypes;
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export enum DeliveryStatuses {
    Unknown = "Unknown",
    Created = "Created",
    Sending = "Sending",
    Delivered = "Delivered",
    Pending = "Pending",
    Sent = "Sent",
    Accepted = "Accepted",
    Received = "Received",
    Cancelled = "Cancelled",
    PermanentFailure = "PermanentFailure",
    TemporaryFailure = "TemporaryFailure",
    TechnicalFailure = "TechnicalFailure"
}
export enum NotificationTypes {
    Unknown = "Unknown",
    Email = "Email",
    Sms = "Sms",
    Brief = "Brief",
    Kvk = "Kvk"
}
export type operations = Record<string, never>;
